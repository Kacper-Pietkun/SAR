name: Run Examples

on:
  pull_request:
     branches: [main]
  workflow_dispatch:

jobs:
  run_examples:
    runs-on: ubuntu-latest
    steps:
      - name: Pull SAR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Delete later"
        uses: actions/checkout@v3
        with:
          ref: 'actions_examples'
          path: 'xd/'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install ogb
          # oneccl_bind_pt for torch 2.0.0 and python 3.10
          wget https://intel-extension-for-pytorch.s3.amazonaws.com/torch_ccl/cpu/oneccl_bind_pt-2.0.0%2Bcpu-cp310-cp310-linux_x86_64.whl
          python -m pip install oneccl_bind_pt-2.0.0+cpu-cp310-cp310-linux_x86_64.whl
          python -m pip install -e . "torch==2.0.0"

      - name: Partition Datasets
        run: |
          mkdir ~/datasets
          mkdir ~/partitioned_data
          python $GITHUB_WORKSPACE/examples/partition_graph.py --dataset-root ~/datasets --dataset-name cora --partition-out-path ~/partitioned_data/cora --num-partitions 3
          # python $GITHUB_WORKSPACE/examples/partition_graph.py --dataset-root ~/datasets --dataset-name reddit --partition-out-path ~/partitioned_data/reddit --num-partitions 3
          # python $GITHUB_WORKSPACE/examples/partition_graph.py --dataset-root ~/datasets --dataset-name ogbn-mag --partition-out-path ~/partitioned_data/ogbn_mag --num-partitions 3
          python $GITHUB_WORKSPACE/examples/partition_graph.py --dataset-root ~/datasets --dataset-name ogbn-arxiv --partition-out-path ~/partitioned_data/ogbn_arxiv --num-partitions 3

      - name: Homogenoeous Basic
        if: always()
        run: |
          python xd/.github/utils/simulate_env.py  --script-path $GITHUB_WORKSPACE/examples/train_homogeneous_graph_basic.py \
                                                                  --timeout 300 \
                                                                  --script-args '--partitioning-json-file ~/partitioned_data/ogbn_arxiv/ogbn-arxiv.json --ip-file ~/ip_file --backend ccl --cpu-run --train-iters 10' \
                                                                  --world-size 3
      
      - name: Homogenoeous Advanced (MFG)
        if: always()
        run: |
          python xd/.github/utils/simulate_env.py  --script-path $GITHUB_WORKSPACE/examples/train_homogeneous_graph_advanced.py \
                                                                  --timeout 300 \
                                                                  --script-args '--partitioning-json-file ~/partitioned_data/ogbn_arxiv/ogbn-arxiv.json --ip-file ~/ip_file --backend ccl --construct-mfgs --cpu-run --train-iters 10' \
                                                                  --world-size 3

      - name: APPNP
        if: always()
        run: |
          python xd/.github/utils/simulate_env.py  --script-path $GITHUB_WORKSPACE/examples/train_dist_appnp_with_sar.py \
                                                                  --timeout 300 \
                                                                  --script-args '--partitioning-json-file ~/partitioned_data/reddit/reddit.json --ip-file ~/ip_file --backend ccl --cpu-run --train-iters 2' \
                                                                  --world-size 3
                                                                
      - name: Correct and Smooth
        if: always()
        run: |
          python xd/.github/utils/simulate_env.py  --script-path $GITHUB_WORKSPACE/examples/correct_and_smooth.py \
                                                                  --timeout 300 \
                                                                  --script-args '--partitioning-json-file ~/partitioned_data/ogbn_arxiv/ogbn-arxiv.json --ip-file ~/ip_file --backend ccl --cpu-run --epochs 10 --model linear --dropout 0.5 --correction-alpha 0.87 --smoothing-alpha 0.81 --correction-adj AD --autoscale' \
                                                                  --world-size 3

      - name: SIGN
        if: always()
        run: |
          python xd/.github/utils/simulate_env.py  --script-path $GITHUB_WORKSPACE/examples/SIGN/train_sign_with_sar.py \
                                                                  --timeout 300 \
                                                                  --script-args '--partitioning-json-file ~/partitioned_data/reddit/reddit.json --ip-file ~/ip_file --backend ccl --num-epochs 11' \
                                                                  --world-size 3
